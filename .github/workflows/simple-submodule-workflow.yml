name: Simple Submodule Workflow

on:
  pull_request:
    types: [opened, closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  convert-to-submodule:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract PR metadata (hardcoded)
      id: meta
      run: |
        # Hardcode values
        FOLDER_NAME="test_file"
        NEW_REPO="dsrctest/test_target_repo"

        # Safety: trim whitespace
        FOLDER_NAME=$(printf '%s' "$FOLDER_NAME" | sed -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//')
        NEW_REPO=$(printf '%s' "$NEW_REPO" | sed -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//')

        echo "folder_name=$FOLDER_NAME" >> $GITHUB_OUTPUT
        echo "org_name=$(echo "$NEW_REPO" | cut -d'/' -f1)" >> $GITHUB_OUTPUT
        echo "new_repo=$NEW_REPO" >> $GITHUB_OUTPUT

    - name: Configure Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Create new repository
      env:
        GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN || github.token }}
      run: |
        NEW_REPO="${{ steps.meta.outputs.new_repo }}"
        if gh repo view "$NEW_REPO" >/dev/null 2>&1; then
          echo "Repository $NEW_REPO already exists"
        else
          gh repo create "$NEW_REPO" --private --description "Source repository for ${{ steps.meta.outputs.folder_name }}" --confirm
        fi

    - name: Push folder content to new repository
      env:
        GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN || github.token }}
      run: |
        FOLDER="${{ steps.meta.outputs.folder_name }}"
        FOLDER=$(printf '%s' "$FOLDER" | sed -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//')
        NEW_REPO="${{ steps.meta.outputs.new_repo }}"
        NEW_REPO=$(printf '%s' "$NEW_REPO" | sed -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//')

        echo "üìÅ Source folder: $FOLDER"
        echo "üèóÔ∏è Target repository: $NEW_REPO"

        [ ! -d "$FOLDER" ] && echo "Error: Folder $FOLDER not found" && exit 1

        TMPDIR=$(mktemp -d)
        cd "$TMPDIR"
        gh repo clone "$NEW_REPO" repo
        cd repo
        cp -r "$GITHUB_WORKSPACE/$FOLDER"/. .
        git add .
        git commit -m "Add $FOLDER source content"
        gh auth setup-git
        git push origin main

    - name: Convert to submodule
      env:
        GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN || github.token }}
      run: |
        FOLDER="${{ steps.meta.outputs.folder_name }}"
        FOLDER=$(printf '%s' "$FOLDER" | sed -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//')
        NEW_REPO="${{ steps.meta.outputs.new_repo }}"
        NEW_REPO=$(printf '%s' "$NEW_REPO" | sed -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//')
        REPO_URL="https://github.com/$NEW_REPO.git"

        gh auth setup-git
        git rm -rf "$FOLDER" || true
        git submodule add "$REPO_URL" "$FOLDER"
        git add .gitmodules "$FOLDER"
        git commit -m "Convert $FOLDER to submodule from $NEW_REPO"

    - name: Push changes
      env:
        GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN || github.token }}
      run: |
        gh auth setup-git
        git push origin main
